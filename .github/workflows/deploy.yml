name: 🚀 Deploy NestJS E-commerce Backend to VPS

on:
  push:
    branches: [main]
  workflow_dispatch: # Allow manual deployment

env:
  NODE_VERSION: '18'
  APP_NAME: 'nestjs-ecommerce-backend'
  DEPLOY_PATH: '/root/ayala_jimmy/finalproject'

jobs:
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint || true
      
    - name: Run tests
      run: npm run test || true
      
    - name: Build project
      run: npm run build

  deploy:
    name: 🚀 Deploy to VPS
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup SSH key
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.VPS_KEY }}
        
    - name: Add VPS to known hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts
        echo "✅ VPS host key added to known_hosts"

    - name: 📁 Copy project files to VPS
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_KEY }}
        source: "."
        target: ${{ env.DEPLOY_PATH }}
        rm: true # Remove existing files first

    - name: 🔧 Deploy and configure on VPS
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_KEY }}
        script: |
          set -e # Exit on any error
          
          echo "🚀 Starting deployment process..."
          cd ${{ env.DEPLOY_PATH }}
          
          # Display current directory and files
          echo "📁 Current directory: $(pwd)"
          echo "📄 Project files:"
          ls -la
          
          echo "🔄 Stopping existing application..."
          pm2 stop ${{ env.APP_NAME }} || echo "⚠️ App not running"
          pm2 delete ${{ env.APP_NAME }} || echo "⚠️ App not in PM2"
          
          # Kill any process using port 3030
          echo "🔪 Killing processes on port 3030..."
          sudo lsof -t -i:3030 | xargs sudo kill -9 2>/dev/null || echo "ℹ️ No process on port 3030"
          
          # Create environment file
          echo "📝 Creating .env file..."
          echo '${{ secrets.ENV_FILE }}' > .env
          
          # Verify .env file was created
          if [ -f .env ]; then
            echo "✅ .env file created successfully"
            echo "📋 Environment variables loaded:"
            grep -E '^[A-Z_]+=.*' .env | sed 's/=.*/=***/' || true
          else
            echo "❌ Failed to create .env file"
            exit 1
          fi
          
          # Install dependencies
          echo "📦 Installing dependencies..."
          npm ci --production=false
          
          # Build the application
          echo "🔨 Building application..."
          npm run build
         
          # Reiniciar PM2 con el nuevo código
          pm2 stop nestjs-blog-backend-ecommerece   || true  # Detener el proceso si está en ejecución
          pm2 delete nestjs-blog-backend-ecommerece   || true  # Eliminar el proceso si ya está activo
          pm2 start dist/main.js --name nestjs-blog-backend-ecommerece   -f  # Iniciar el proceso desde el archivo compilado con force flag